Given two integers n and k, return all possible combinations of k numbers out of 1 2 3 ... n.

Make sure the combinations are sorted.

To elaborate,

    Within every entry, elements should be sorted. [1, 4] is a valid entry while [4, 1] is not.
    Entries should be sorted within themselves.

////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 


void helper(vector<vector<int>> &ans, vector<int> &record, int n, int k, int start){
    if(record.size() == k) {                      
        ans.push_back(record);
        return;
    }
    
    for(int i = start; i<=n; i++){
        record.push_back(i);
        helper(ans, record, n, k, i+1);
        record.pop_back();
    }
}

vector<vector<int> > Solution::combine(int n, int k) {
    vector<vector<int>> ans;
    vector<int> record;
    helper(ans, record, n, k, 1);
    return ans;
}
